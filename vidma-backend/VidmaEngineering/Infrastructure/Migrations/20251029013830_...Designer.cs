// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251029013830_..")]
    partial class _
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.AboutUs.AboutUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnglishDesc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("SinhalaDesc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("TamilDesc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("AboutUs");
                });

            modelBuilder.Entity("Domain.Entities.AboutUs.AboutUsImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnglishDesc")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("ImageNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SinhalaDesc")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("TamilDesc")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("ImageNumber")
                        .IsUnique();

                    b.ToTable("AboutUsImage", null, t =>
                        {
                            t.HasCheckConstraint("CK_AboutUsImage_Image_AllowedValues", "ImageNumber IN ('Image1','Image2','Image3','Image4','Image5')");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnglishDesc = "Description1",
                            ImageLink = "link1",
                            ImageNumber = "Image1",
                            SinhalaDesc = "Description1",
                            TamilDesc = "Description1"
                        },
                        new
                        {
                            Id = 2,
                            EnglishDesc = "Description2",
                            ImageLink = "link2",
                            ImageNumber = "Image2",
                            SinhalaDesc = "Description2",
                            TamilDesc = "Description2"
                        },
                        new
                        {
                            Id = 3,
                            EnglishDesc = "Description3",
                            ImageLink = "link3",
                            ImageNumber = "Image3",
                            SinhalaDesc = "Description3",
                            TamilDesc = "Description3"
                        },
                        new
                        {
                            Id = 4,
                            EnglishDesc = "Description4",
                            ImageLink = "link4",
                            ImageNumber = "Image4",
                            SinhalaDesc = "Description4",
                            TamilDesc = "Description4"
                        },
                        new
                        {
                            Id = 5,
                            EnglishDesc = "Description5",
                            ImageLink = "link5",
                            ImageNumber = "Image5",
                            SinhalaDesc = "Description5",
                            TamilDesc = "Description5"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContactUs.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FacebookLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TikTokLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WhatsappLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Domain.Entities.ContactUs.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleMapLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Domain.Entities.Sections.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Hero", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Entities.Sections.Hero", b =>
                {
                    b.OwnsOne("Domain.Entities.Sections.FirstHero", "FirstHero", b1 =>
                        {
                            b1.Property<int>("HeroId")
                                .HasColumnType("int");

                            b1.Property<string>("Image")
                                .HasColumnType("longtext")
                                .HasColumnName("FirstHeroImage");

                            b1.HasKey("HeroId");

                            b1.ToTable("Hero");

                            b1.WithOwner()
                                .HasForeignKey("HeroId");

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "English", b2 =>
                                {
                                    b2.Property<int>("FirstHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("FirstHeroEnglishText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("FirstHeroEnglishTitle");

                                    b2.HasKey("FirstHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("FirstHeroHeroId");
                                });

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "Sinhala", b2 =>
                                {
                                    b2.Property<int>("FirstHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("FirstHeroSinhalaText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("FirstHeroSinhalaTitle");

                                    b2.HasKey("FirstHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("FirstHeroHeroId");
                                });

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "Tamil", b2 =>
                                {
                                    b2.Property<int>("FirstHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("FirstHeroTamilText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("FirstHeroTamilTitle");

                                    b2.HasKey("FirstHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("FirstHeroHeroId");
                                });

                            b1.Navigation("English")
                                .IsRequired();

                            b1.Navigation("Sinhala")
                                .IsRequired();

                            b1.Navigation("Tamil")
                                .IsRequired();
                        });

                    b.OwnsOne("Domain.Entities.Sections.SecondHero", "SecondHero", b1 =>
                        {
                            b1.Property<int>("HeroId")
                                .HasColumnType("int");

                            b1.Property<string>("Image")
                                .HasColumnType("longtext")
                                .HasColumnName("SecondHeroImage");

                            b1.HasKey("HeroId");

                            b1.ToTable("Hero");

                            b1.WithOwner()
                                .HasForeignKey("HeroId");

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "English", b2 =>
                                {
                                    b2.Property<int>("SecondHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("SecondHeroEnglishText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("SecondHeroEnglishTitle");

                                    b2.HasKey("SecondHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("SecondHeroHeroId");
                                });

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "Sinhala", b2 =>
                                {
                                    b2.Property<int>("SecondHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("SecondHeroSinhalaText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("SecondHeroSinhalaTitle");

                                    b2.HasKey("SecondHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("SecondHeroHeroId");
                                });

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "Tamil", b2 =>
                                {
                                    b2.Property<int>("SecondHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("SecondHeroTamilText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("SecondHeroTamilTitle");

                                    b2.HasKey("SecondHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("SecondHeroHeroId");
                                });

                            b1.Navigation("English")
                                .IsRequired();

                            b1.Navigation("Sinhala")
                                .IsRequired();

                            b1.Navigation("Tamil")
                                .IsRequired();
                        });

                    b.OwnsOne("Domain.Entities.Sections.ThirdHero", "ThirdHero", b1 =>
                        {
                            b1.Property<int>("HeroId")
                                .HasColumnType("int");

                            b1.Property<string>("Image")
                                .HasColumnType("longtext")
                                .HasColumnName("ThirdHeroImage");

                            b1.HasKey("HeroId");

                            b1.ToTable("Hero");

                            b1.WithOwner()
                                .HasForeignKey("HeroId");

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "English", b2 =>
                                {
                                    b2.Property<int>("ThirdHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("ThirdHeroEnglishText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("ThirdHeroEnglishTitle");

                                    b2.HasKey("ThirdHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("ThirdHeroHeroId");
                                });

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "Sinhala", b2 =>
                                {
                                    b2.Property<int>("ThirdHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("ThirdHeroSinhalaText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("ThirdHeroSinhalaTitle");

                                    b2.HasKey("ThirdHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("ThirdHeroHeroId");
                                });

                            b1.OwnsOne("Domain.Entities.Sections.LocalizedContent", "Tamil", b2 =>
                                {
                                    b2.Property<int>("ThirdHeroHeroId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Text")
                                        .HasMaxLength(500)
                                        .HasColumnType("varchar(500)")
                                        .HasColumnName("ThirdHeroTamilText");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasMaxLength(150)
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("ThirdHeroTamilTitle");

                                    b2.HasKey("ThirdHeroHeroId");

                                    b2.ToTable("Hero");

                                    b2.WithOwner()
                                        .HasForeignKey("ThirdHeroHeroId");
                                });

                            b1.Navigation("English")
                                .IsRequired();

                            b1.Navigation("Sinhala")
                                .IsRequired();

                            b1.Navigation("Tamil")
                                .IsRequired();
                        });

                    b.Navigation("FirstHero")
                        .IsRequired();

                    b.Navigation("SecondHero")
                        .IsRequired();

                    b.Navigation("ThirdHero")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
